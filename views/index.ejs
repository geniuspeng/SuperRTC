<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title><%= title %></title>
      <!-- 最新 Bootstrap 核心 CSS 文件 -->
      <link rel="stylesheet" href="http://cdn.bootcss.com/twitter-bootstrap/3.0.3/css/bootstrap.min.css">

      <!-- 可选的Bootstrap主题文件（一般不用引入） -->
      <link rel="stylesheet" href="http://cdn.bootcss.com/twitter-bootstrap/3.0.3/css/bootstrap-theme.min.css">

      <link rel='stylesheet' href='/stylesheets/style.css' />
      <link rel='stylesheet'  media="screen and (max-width:600px)" href='/stylesheets/mobile.css' />

    <link rel='stylesheet' media="screen" href='/stylesheets/colorpicker.css' />

  </head>
  <body>
    <header>
        <h1><%= title %></h1>
        <p>Welcome to <%= title %></p>
    </header>
    <div class="left">
        <div id="drawCanvas">
            <canvas id="graph" width="500" height="300">
                您的浏览器不支持,请使用chrome、firefox浏览器
            </canvas>
            <div id="tools"  class="input-prepend" >

                <input type="button"  class="btn"   id="colorSelector" value="Color">
                <input type="button"  class="btn"  value="SaveAs" id="saveas">
                <input type="button"  class="btn"  value="铅笔" id="pen">
                <input type="button"  class="btn"  value="橡皮擦" id="eraser">
                <input type="button"  class="btn"  value="清空" id="clearpaint">
            </div>
        </div>
        <div id="chat">
            <div class="msgs" id="msgs"></div>
            <input type="file" id="fileIpt" class="fileIpt">
            <button id="sendFileBtn" class="sendFileBtn">发送文件</button>
            <input type="text" id="msgIpt" class="msgIpt">
            <button id="sendBtn" class="sendBtn">发送</button>
        </div>
        <div id="files">
        </div>
    </div>
    <div class="right">
        <div id="videos">
            <video id="me" autoplay></video>
        </div>
    </div>



  </body>
  <script type="text/javascript" src="/javascripts/client.js"></script>

  <script src="javascripts/jquery-1.10.0.js"></script>
  <script src="javascripts/jquery.mpaint.js"></script>
  <script   src="javascripts/colorpicker.js"></script>


  <!-- 最新的 Bootstrap 核心 JavaScript 文件 -->
  <script src="http://cdn.bootcss.com/twitter-bootstrap/3.0.3/js/bootstrap.min.js"></script>
  <!--<script src="/socket.io/socket.io.js"></script>-->

  <script type="text/javascript">
      var videos = document.getElementById("videos");
      var sendBtn = document.getElementById("sendBtn");
      var msgs = document.getElementById("msgs");
      var sendFileBtn = document.getElementById("sendFileBtn");
      var files = document.getElementById("files");
      var rtc = SuperRTC();
       //console.log(rtc);
      /**********************************************************/
      sendBtn.onclick = function(event){
          var msgIpt = document.getElementById("msgIpt"),
                  msg = msgIpt.value,
                  p = document.createElement("p");
          p.innerText = "me: " + msg;
          //广播消息
          rtc.broadcast(msg);
          msgIpt.value = "";
          msgs.appendChild(p);
      };

      sendFileBtn.onclick = function(event){
          //分享文件
          rtc.shareFile("fileIpt");
      };
      /**********************************************************/
      //共享画板

      rtc.on('draw', function (data) {
          console.log(data);
          var canvas = document.getElementById('graph');
          var ctx = canvas.getContext('2d');
          var ex, ey, e = data;
          ctx.fillStyle = "#222";
          $("#graph").MPaint.SetColor(ctx.strokeStyle);
          ctx.strokeStyle = e.color||"#000";
          ctx.lineWidth = 5;
          ctx.lineJoin = "round";

          if (e.sx && e.sy) {
              ex = e.sx;
              ey = e.sy;
              ctx.beginPath();
              ctx.moveTo(ex, ey);
          }
          if (e.ex && e.ey) {

              ctx.moveTo(ex, ey);
              ctx.lineTo(e.ex, e.ey);
              ctx.stroke();
          }
      });


      $("#graph").MPaint({
          drawReady: function (e) {
              //console.log($("#graph").MPaint.GetColor());
              //rtc.emit('draw', { sx: e.x, sy: e.y,color: $("#graph").MPaint.GetColor() });

              rtc.broadcastBoardInfo({ sx: e.x, sy: e.y,color: $("#graph").MPaint.GetColor() });

          },
          drawBegin: function (e) {
             // rtc.emit('draw', { ex: e.x, ey: e.y,color: $("#graph").MPaint.GetColor() });
              rtc.broadcastBoardInfo({ ex: e.x, ey: e.y,color: $("#graph").MPaint.GetColor() });
          },
          drawEnd: function (e) {
          }
      });

      $('#colorSelector').ColorPicker({
          color: '#000',
          onShow: function (colpkr) {
              $(colpkr).fadeIn(500);
              return false;
          },
          onHide: function (colpkr) {
              $(colpkr).fadeOut(500);
              return false;
          },
          onChange: function (hsb, hex, rgb) {
              $('#colorSelector').css('backgroundColor', '#' + hex);
              $("#graph").MPaint.SetColor('#' + hex);
          }
      });
      $('#saveas').on("click",function(){
          $("#graph").MPaint.SaveImage();
      });
      $('#eraser').on("click",function(){
          $("#graph").MPaint.Eraser();
      });
      $('#clearpaint').on("click",function(){
          $("#graph").MPaint.Clear();
      });
      $('#pen').on("click",function(){
          $("#graph").MPaint.Pen();
      });

      /**********************************************************/
      //对方同意接收文件
      rtc.on("send_file_accepted", function(sendId, socketId, file){
          var p = document.getElementById("sf-" + sendId);
          p.innerText = "对方接收" + file.name + "文件，等待发送";

      });
      //对方拒绝接收文件
      rtc.on("send_file_refused", function(sendId, socketId, file){
          var p = document.getElementById("sf-" + sendId);
          p.innerText = "对方拒绝接收" + file.name + "文件";
      });
      //请求发送文件
      rtc.on('send_file', function(sendId, socketId, file){
          var p = document.createElement("p");
          p.innerText = "请求发送" + file.name + "文件";
          p.id = "sf-" + sendId;
          files.appendChild(p);
      });
      //文件发送成功
      rtc.on('sended_file', function(sendId, socketId, file){
          var p = document.getElementById("sf-" + sendId);
          p.parentNode.removeChild(p);
      });
      //发送文件碎片
      rtc.on('send_file_chunk', function(sendId, socketId, percent, file){
          var p = document.getElementById("sf-" + sendId);
          p.innerText = file.name + "文件正在发送: " + Math.ceil(percent) + "%";
      });
      //接受文件碎片
      rtc.on('receive_file_chunk', function(sendId, socketId, fileName, percent){
          var p = document.getElementById("rf-" + sendId);
          p.innerText = "正在接收" + fileName + "文件：" +  Math.ceil(percent) + "%";
      });
      //接收到文件
      rtc.on('receive_file', function(sendId, socketId, name){
          var p = document.getElementById("rf-" + sendId);
          p.parentNode.removeChild(p);
      });
      //发送文件时出现错误
      rtc.on('send_file_error', function(error){
          console.log(error);
      });
      //接收文件时出现错误
      rtc.on('receive_file_error', function(error){
          console.log(error);
      });
      //接受到文件发送请求
      rtc.on('receive_file_ask', function(sendId, socketId, fileName, fileSize){
          var p;
          if (window.confirm(socketId + "用户想要给你传送" + fileName + "文件，大小" + fileSize + "KB,是否接受？")) {
              rtc.sendFileAccept(sendId);
              p = document.createElement("p");
              p.innerText = "准备接收" + fileName + "文件";
              p.id = "rf-" + sendId;
              files.appendChild(p);
          } else {
              rtc.sendFileRefuse(sendId);
          }
      });
      //成功创建WebSocket连接
      rtc.on("connected", function(socket) {
          //创建本地视频流
          rtc.createStream({
              "video": true,
              "audio": true
          });
      });
      //创建本地视频流成功
      rtc.on("stream_created", function(stream) {
          document.getElementById('me').src = URL.createObjectURL(stream);
          document.getElementById('me').play();
      });
      //创建本地视频流失败
      rtc.on("stream_create_error", function() {
          alert("create stream failed!");
      });
      //接收到其他用户的视频流
      rtc.on('pc_add_stream', function(stream, socketId) {
          var newVideo = document.createElement("video"),
                  id = "other-" + socketId;
          newVideo.setAttribute("class", "other");
          newVideo.setAttribute("autoplay", "autoplay");
          newVideo.setAttribute("id", id);
          videos.appendChild(newVideo);
          rtc.attachStream(stream, id);
      });
      //删除其他用户
      rtc.on('remove_peer', function(socketId) {
          var video = document.getElementById('other-' + socketId);
          if(video){
              video.parentNode.removeChild(video);
          }
      });
      //接收到文字信息
      rtc.on('data_channel_message', function(channel, socketId, message){
          var p = document.createElement("p");
          p.innerText = socketId + ": " + message;
          msgs.appendChild(p);
      });
      //连接WebSocket服务器
      rtc.connect("ws:" + window.location.href.substring(window.location.protocol.length).split('#')[0], window.location.hash.slice(1));
  </script>
</html>
